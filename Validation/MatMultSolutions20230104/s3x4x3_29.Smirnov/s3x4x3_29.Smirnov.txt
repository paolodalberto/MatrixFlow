#
# Yacas script s3x4x3_29.Smirnov.txt created 04-Feb-2017 22:16:45
#
# Matrix multiplication method for 3x4x3_29
#
# Intermediate products: 29
#
P01 := (a23 + a34) * (- b21 + b31 - b41 + b42);
P02 := (a13 + a31) * (b11 - b12 - b22 + b32);
P03 := (a14 - a22 + a24) * (- b21 + b43);
P04 := (a11 - a12 + a21) * (b13 - b22);
P05 := (a13 - a32 - a33) * (b21 + b33);
P06 := (- a23 + a32 + a33) * (b22 + b33);
P07 := (a32 + a33) * b33;
P08 := (- a12 - a13 + a14 - a22 + a24 + a32 + a33) * b21;
P09 := (a11 - a12 + a21 - a22 - a23 + a32 + a33) * b22;
P10 := a23 * (b21 - b31 + b32 + b33 + b41 - b42);
P11 := a31 * (b12 + b22 - b32);
P12 := a34 * (b21 - b31 + b41);
P13 := a13 * (- b11 + b12 + b22 + b31 - b32 + b33);
P14 := (a11 + a13 + a21) * (- b11 + b12 + b22);
P15 := (a14 + a23 + a24) * (b21 + b41 - b42);
P16 := (- a14 + a21) * (b11 - b42);
P17 := (a22 - a24) * b43;
P18 := (a11 - a12) * b13;
P19 := (- a13 + a33 + a34) * (- b21 + b31);
P20 := a21 * (b12 + b13 - b42);
P21 := (a21 + a24 - a34) * b42;
P22 := (- a23 + a31 + a33) * (- b22 + b32);
P23 := (a11 + a14 - a31) * b11;
P24 := a14 * (- b11 + b41 + b43);
P25 := (- a12) * (b13 + b21 + b23);
P26 := a22 * (b22 + b23 + b43);
P27 := a32 * (b23 - b33);
P28 := a31 * b13;
P29 := a34 * b43;
c11 :=       + P02 - P03       - P05       - P07 - P08             + P11       + P13                   - P17                               + P23 + P24;
c12 :=       + P02       + P04                                     + P11             + P14       + P16       - P18       - P20             + P23;
c13 :=             + P03       + P05       + P07 + P08                                                 + P17 + P18                                     - P25;
c21 := + P01       + P03                                                 + P12             + P15 + P16 + P17                   + P21             - P24;
c22 := + P01             - P04       + P06 - P07       - P09 + P10       + P12                               + P18       + P20 + P21;
c23 :=                   + P04       - P06 + P07       - P09                                           - P17 - P18                                           + P26;
c31 :=       + P02             - P05       - P07                   + P11 + P12 + P13                               + P19;
c32 := + P01                         + P06 - P07             + P10 + P11 + P12                                                       + P22;
c33 :=                                     + P07                                                                                                                   + P27 + P28 + P29;

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31 + a14*b41));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32 + a14*b42));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33 + a14*b43));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31 + a24*b41));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32 + a24*b42));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33 + a24*b43));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31 + a34*b41));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32 + a34*b42));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33 + a34*b43));

# Statistics about non-zero triples:
# in odd equations  [1]
# in even equations [0, 2]
# in kernel columns [1, 2]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x4x3_29 solution file s3x4x3_29.Smirnov.txt
#
