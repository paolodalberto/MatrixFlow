#
# Yacas script 's3x3x3_23.JinsooOh_20131108a.yacas.txt' created 04-Jan-2023 14:38:28
#
# Matrix multiplication method for 3x3x3_23
#
# Intermediate products: 23
#
P01 := (- a13) * (- b32);
P02 := (a12 - a22) * (b12 + b22);
P03 := (- a12 + a22) * (- b13 - b23);
P04 := (a21 - a22 + a23) * (- b21 + b23);
P05 := a12 * (- b21);
P06 := (- a11 + a12 + a21 - a22 + a23) * (b13 + b32 - b33);
P07 := (- a12 - a21 + a22 - a23) * (b13 - b21 + b23);
P08 := (- a23) * (b13 - b33);
P09 := (- a23 - a31) * (- b13 + b21 - b23 + b31);
P10 := (a31 + a33) * (- b31);
P11 := (- a11 + a12 + a21 - a22) * (b12 - b13 - b32 + b33);
P12 := (- a31) * (- b11 + b31);
P13 := (- a11 + a12 - a13 + a21 - a22 + a23) * (- b32 + b33);
P14 := (- a13 - a31 - a33) * (b11 + b12 - b31);
P15 := (a23 - a33) * (- b31 + b33);
P16 := (a12 + a32) * (- b22);
P17 := (- a21 + a31) * (b11 - b13 + b21 - b23);
P18 := (- a11 - a13 - a31 - a33) * (b11 + b12);
P19 := a12 * b22;
P20 := (- a11) * b12;
P21 := (- a13 - a33) * (- b11 - b12 + b31 + b32);
P22 := (- a23 - a31 + a32) * (- b21 + b23);
P23 := a32 * b21;

c11 := - P05                         + P10                   + P14                   - P18       + P20;
c12 := P01                                                                                                       + P19 - P20;
c13 := P01             - P04 - P05 - P06 - P07                               - P13;
c21 := - P03       - P05       - P07       - P09             + P12                         - P17;
c22 := - P02                   + P06       + P08             + P11                                           + P19 - P20;
c23 := - P03 - P04 - P05       - P07 + P08;
c31 := - P10       + P12                                                             + P23;
c32 := - P01                                                             - P12       - P14       - P16             - P19       - P21;
c33 := P08 + P09 - P10                         - P15                                     + P22 + P23;

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2]
# in kernel columns [1, 2, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x3x3_23 solution file 's3x3x3_23.JinsooOh_20131108a.yacas.txt'
#
