
#
# Simplified Yacas script 's3x2x2_11.pyz3.simplified.txt' created 04-Jan-2023 14:38:25
#
# Matrix multiplication method for 3x2x2_11
#
# Operation count was reduced by 11 add/subtract operations:
#
#         original  now
# a terms:   17  =>  11
# b terms:    8  =>   6
# c terms:   18  =>  15
# ---------------------------
# total:     43  =>  32
#

#
# Intermediate products: 11
#

#
# Auxiliary variables:
#
F1 := - a21 - a22;
F2 := a11 + a12;
F3 := a12 - a22;

G1 := b11 - b12;

#
# Product terms:
#
P01 := (F1 + F2) * G1;
P02 := F3 * (- b22);
P03 := (- F3) * (b21 - G1);
P04 := (- a32) * (- b21 + b22);
P05 := (- a31 - a32 - F1) * (- b21);
P06 := (- a21 + a31) * (- b11 + b21);
P07 := (- a22) * (- b12 + b22);
P08 := (a11 + a22) * (- b12);
P09 := (a31 + F1) * (b12 - b21);
P10 := (- F1) * (- b12);
P11 := (- a31 - F1 - F2) * (- G1);

#
# Auxiliary variables for sums of products:
#
T1 := - P01 + P09 - P10 + P11;

#
# Target matrix sums of products:
#
c11 := - P03 + P06 - P08 + P09 + P11;
c12 := - P02 - P07 - P08;
c21 := P06 + T1;
c22 := - P07 - P10;
c31 := P05 + T1;
c32 := - P04 + P05 + P09 - P10;


#
# Algorithm validated via prime element calculation.
#

Simplify(c11 - (a11*b11 + a12*b21));
Simplify(c12 - (a11*b12 + a12*b22));
Simplify(c21 - (a21*b11 + a22*b21));
Simplify(c22 - (a21*b12 + a22*b22));
Simplify(c31 - (a31*b11 + a32*b21));
Simplify(c32 - (a31*b12 + a32*b22));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2, 4]
# in kernel columns [1, 2, 3]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x2x2_11 solution file 's3x2x2_11.pyz3.simplified.txt'
#
