
#
# Simplified Yacas script 's2x3x3_15.Hopcroft.simplified.txt' created 04-Jan-2023 14:38:24
#
# Matrix multiplication method for 2x3x3_15
#
# Operation count was reduced by 9 add/subtract operations:
#
#         original  now
# a terms:   17  =>  12
# b terms:   15  =>  15
# c terms:   26  =>  22
# ---------------------------
# total:     58  =>  49
#

#
# Intermediate products: 15
#

#
# Auxiliary variables:
#
F1 := a11 + a21;
F2 := a13 + a23;
F3 := a12 + a22;


#
# Product terms:
#
P01 := a11 * (b11 - b12 - b31);
P02 := F1 * (b11 - b13 - b21);
P03 := a12 * (- b21 + b22 - b32);
P04 := a22 * (- b12 + b22 - b23);
P05 := F2 * (- b23 - b31 + b33);
P06 := a23 * (- b13 - b32 + b33);
P07 := (F1 + F3) * b21;
P08 := (a22 + F1) * (b12 - b21);
P09 := (a21 + a22) * (- b12);
P10 := (F2 + F3) * b23;
P11 := (a12 + F2) * (- b23 + b32);
P12 := (a12 + a13) * (- b32);
P13 := (a11 - a23) * (b13 - b31);
P14 := (a21 + a23) * (- b13);
P15 := (a11 + a13) * b31;

#
# Auxiliary variables for sums of products:
#
T1 := P08 + P09;
T2 := - P11 - P12;

#
# Target matrix sums of products:
#
c11 := P01 + P07 + P15 + T1;
c12 := P03 + P07 - P12 + T1;
c13 := P05 - P06 + P13 + P15 + T2;
c21 := - P01 + P02 + P13 - P14 - T1;
c22 := P04 - P09 + P10 - T2;
c23 := P06 + P10 - P14 - T2;


#
# Algorithm validated via prime element calculation.
#

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1]
# in even equations [0, 2]
# in kernel columns [1, 2]

# Algorithm properly fulfills all Brent Equations

#
# End of 2x3x3_15 solution file 's2x3x3_15.Hopcroft.simplified.txt'
#
