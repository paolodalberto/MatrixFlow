
#
# Simplified Yacas script 's3x3x3_23.JinsooOh_20131111b.simplified.txt' created 04-Jan-2023 14:38:30
#
# Matrix multiplication method for 3x3x3_23
#
# Operation count was reduced by 39 add/subtract operations:
#
#         original  now
# a terms:   25  =>  19
# b terms:   47  =>  26
# c terms:   49  =>  37
# ---------------------------
# total:    121  =>  82
#

#
# Intermediate products: 23
#

#
# Auxiliary variables:
#
F1 := a12 - a13;
F2 := - a31 - a32;

G1 := - b11 + b12 + b21;
G2 := b22 - b31 + b32;
G3 := - b13 + b23 + b33;
G4 := b22 + b23;

#
# Product terms:
#
P01 := (- a11 - a13 + a23) * (b32 + b33 + G4);
P02 := (a13 - a33) * (b22 + b32);
P03 := (- a11 - a12) * (- b21 + G2);
P04 := (- a11) * (- b11 + b21 + b31 + G3);
P05 := F2 * (- b21 - b23);
P06 := (a33 + F1) * G2;
P07 := a22 * (- b23);
P08 := (- a11 - a33) * (b31 + G1 + G3);
P09 := (- a22 - a32) * G1;
P10 := (- a23) * (- b33);
P11 := (- a33) * (G1 + G3);
P12 := (- a22 + a23 + F1) * (- G4);
P13 := (- a21 - a22 + F2) * (b11 - b12);
P14 := (- a23 - F1) * (b23 + G2);
P15 := a21 * (b12 + b13);
P16 := (a32 - a33 - F1) * (- b22);
P17 := (a22 - F2) * (b23 + G1);
P18 := (- a11) * (G1 - G2);
P19 := F1 * (- b31 + b32);
P20 := (a11 - a31) * (- b12);
P21 := (- a23) * (- b31);
P22 := (- a21) * (- b12);
P23 := (- a31 - a33) * (b13 - b23 - G1);

#
# Auxiliary variables for sums of products:
#
T1 := P04 - P08 + P11;
T2 := P02 + P06;
T3 := P07 + P17;
T4 := - P14 + P21;
T5 := P07 + P22;

#
# Target matrix sums of products:
#
c11 := P03 + P18 + T1 + T2;
c12 := - P19 + T1 + T2;
c13 := - P01 + P08 + P10 - P11 - P18 - T2 + T4;
c21 := - P05 - P13 + P21 + P22 + T3;
c22 := P12 - P19 + T4 + T5;
c23 := P10 + P15 - T5;
c31 := P05 - P09 + P20 + T1 - T3;
c32 := P06 - P16 - P19 + P20 + T1;
c33 := P09 - P11 - P23 + T3;


#
# Algorithm validated via prime element calculation.
#

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2, 4]
# in kernel columns [1, 2, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x3x3_23 solution file 's3x3x3_23.JinsooOh_20131111b.simplified.txt'
#
