
#
# Simplified Yacas script 's3x3x3_23.Laderman.simplified.txt' created 04-Jan-2023 14:38:32
#
# Matrix multiplication method for 3x3x3_23
#
# Operation count was reduced by 26 add/subtract operations:
#
#         original  now
# a terms:   28  =>  20
# b terms:   28  =>  19
# c terms:   42  =>  33
# ---------------------------
# total:     98  =>  72
#

#
# Intermediate products: 23
#

#
# Auxiliary variables:
#
F1 := a11 + a21;
F2 := - a13 - a22;
F3 := - a32 - a33;
F4 := a11 + a31;

G1 := b12 + b22;
G2 := b31 - b33;
G3 := b11 - b13;
G4 := - b22 + b32;
G5 := b21 - b23;

#
# Product terms:
#
P01 := (- a12 + F1 + F2 + F3) * (- b22);
P02 := F1 * G1;
P03 := a22 * (b11 - G1 + G2 + G5);
P04 := (a22 - F1) * (- b11 + G1);
P05 := (- a21 + a22) * (- b11 + b12);
P06 := a11 * (- b11);
P07 := (a32 + F4) * (b23 + G3);
P08 := F4 * (- b13 + b23);
P09 := (a31 + a32) * G3;
P10 := (a12 + a23 + a32 + F2 + F4) * b23;
P11 := a32 * (- b31 - G3 + G4 + G5);
P12 := (a13 - F3) * (b31 - G4);
P13 := (a13 + a33) * G4;
P14 := a13 * b31;
P15 := F3 * (- b31 + b32);
P16 := (- a23 - F2) * (b23 - G2);
P17 := (- a13 + a23) * (b23 + b33);
P18 := (a22 - a23) * G2;
P19 := a12 * b21;
P20 := a23 * b32;
P21 := a21 * b13;
P22 := a31 * b12;
P23 := a33 * b33;

#
# Auxiliary variables for sums of products:
#
T1 := - P06 + P14;
T2 := P02 + P04 + P06;
T3 := P14 + P16 + P17;
T4 := - P12 + P15;
T5 := - P07 + P09;

#
# Target matrix sums of products:
#
c11 := P19 + T1;
c12 := P01 - P04 + P05 + T1 + T4;
c13 := P10 + P16 + P18 + T1 + T5;
c21 := P03 + T2 + T3;
c22 := - P05 + P20 + T2;
c23 := P18 + P21 + T3;
c31 := P07 - P08 + P11 + P12 + P13 - T1;
c32 := P13 - P14 + P22 - T4;
c33 := P06 - P08 + P23 - T5;


#
# Algorithm validated via prime element calculation.
#

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2]
# in kernel columns [1, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x3x3_23 solution file 's3x3x3_23.Laderman.simplified.txt'
#
