#
# Yacas script 's3x3x3_23.JinsooOh_20131108d.yacas.txt' created 04-Jan-2023 14:38:29
#
# Matrix multiplication method for 3x3x3_23
#
# Intermediate products: 23
#
P01 := (- a12) * (- b21 + b23);
P02 := a22 * (- b21 + b23 + b31 - b33);
P03 := a12 * (b21 - b22 - b23);
P04 := a33 * (- b21 + b31);
P05 := (- a22 + a31 - a33) * (- b13 - b23);
P06 := a22 * (b22 - b32);
P07 := (- a13) * (- b11 + b12 + b13 + b32 + b33);
P08 := (- a13 + a22 + a23) * (b31 - b33);
P09 := (- a13) * (- b11 + b12 + b13 - b31 + b32 + b33);
P10 := (a22 + a33) * (b13 + b21 - b31 + b33);
P11 := (a11 - a21) * (- b11 + b13);
P12 := (- a13 + a21) * (- b11 + b12 + b13 + b32);
P13 := (- a31 + a32 + a33) * (- b23);
P14 := (a22 - a32) * (- b12 + b13 - b22 + b23);
P15 := (a23 - a33) * (- b32 + b33);
P16 := (- a12 - a31 + a32 + a33) * (b11 + b23);
P17 := (a21 - a22 - a33) * (b13 + b32);
P18 := (- a11 + a12 + a31 - a32 - a33) * b11;
P19 := (a21 - a22 - a31 + a32) * (- b12 + b13);
P20 := (- a11 + a13) * (b11 - b12 - b13);
P21 := (a21 - a22 - a23) * (- b32);
P22 := (- a21) * (b12 + b32);
P23 := (- a12 + a32 + a33) * (b11 + b21);

c11 := P01                               - P07       + P09                   - P13             - P16       - P18;
c12 := P01       - P03                                           - P11 - P12                                           + P20       - P22;
c13 := - P07                   + P11 + P12 - P13             - P16       - P18                   + P22;
c21 := P04                   + P08 + P09 + P10       - P12             + P15       + P17                   + P21 - P22;
c22 := P06                                                                                     + P21 - P22;
c23 := P02       + P04                               + P10                         + P15       + P17                   + P21;
c31 := P01             + P04                                                 - P13             - P16                                     + P23;
c32 := - P05 + P06                                     - P13 + P14             - P17       + P19             - P22;
c33 := P02       + P04 - P05                         + P10             - P13;

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1]
# in even equations [0, 2, 4]
# in kernel columns [1, 2]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x3x3_23 solution file 's3x3x3_23.JinsooOh_20131108d.yacas.txt'
#
