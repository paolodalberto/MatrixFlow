#
#  3x3 Solution of Ondrej Sýkora
#

# M211 := (-a11+a21+a23) * (b12+b31-b11);
# M231 := (-a12+a22+a23) * (b22+b33-b23);
# M311 := (-a12+a32+a33) * (b22+b31-b21);
# M331 := (-a11+a31+a33) * (b12+b33-b13);
# 
# M212 := (a21+a23) * (b11-b12);
# M232 := (a22+a23) * (b23-b22);
# M312 := (a32+a33) * (b21-b22);
# M332 := (a31+a33) * (b13-b12);
# 
# M213 := (a11-a21) * (b31-b11);
# M233 := (a12-a22) * (b33-b23);
# M313 := (a12-a32) * (b31-b21);
# M333 := (a11-a31) * (b33-b13);
# 
# P1 := a11 * b12;
# P2 := a12 * b22;
# P3 := a13 * b32;
# 
# H212 := a22 * b21;
# H231 := a21 * b13;
# H311 := a31 * b11;
# H332 := a32 * b23;
# 
# R1 := (a11 + a12 + a13 -(a23 + a21) - (a33+a32)) * b31;
# R3 := (a11 + a12 + a13 -(a23 + a22) - (a33+a31)) * b33;
# 
# Q2 := a23 * (b32 - b12 - b22 + (b11 - b31) + (b23 - b33));
# Q3 := a33 * (b32 - b12 - b22 + (b21 - b31) + (b13 - b33));
# 
# c11 := R1 + (M211 + M212 + P1) + (M311 + M312 + P2);
# c12 := P1 + P2 + P3;
# c13 := R3 + (M231 + M232 + P2) + (M331 + M332 + P1);
# c21 := P1 + M211 + M212 + M213 + H212;
# c22 := Q2 + (M211 + M213 + P1) + (M231 + M233 + P2);
# c23 := P2 + M231 + M232 + M233 + H231;
# c31 := P2 + M311 + M312 + M313 + H311;
# c32 := Q3 + (M311 + M313 + P2) + (M331 + M333 + P1);
# c33 := P1 + M331 + M332 + M333 + H332;

P1 := a11 * b12;
P2 := a12 * b22;
P3 := a13 * b32;

P4 := (-a11+a21+a23) * (b12+b31-b11);
P5 := (-a12+a22+a23) * (b22+b33-b23);
P6 := (-a12+a32+a33) * (b22+b31-b21);
P7 := (-a11+a31+a33) * (b12+b33-b13);

P8 := (a21+a23) * (b11-b12);
P9 := (a22+a23) * (b23-b22);
P10 := (a32+a33) * (b21-b22);
P11 := (a31+a33) * (b13-b12);

P12 := (a11-a21) * (b31-b11);
P13 := (a12-a22) * (b33-b23);
P14 := (a12-a32) * (b31-b21);
P15 := (a11-a31) * (b33-b13);


P16 := a22 * b21;
P17 := a21 * b13;
P18 := a31 * b11;
P19 := a32 * b23;

P20 := (a11 + a12 + a13 -a23 - a21 - a33 - a32) * b31;
P21 := (a11 + a12 + a13 -a23 - a22 - a33 - a31) * b33;

P22 := a23 * (b32 - b12 - b22 + b11 - b31 + b23 - b33);
P23 := a33 * (b32 - b12 - b22 + b21 - b31 + b13 - b33);

c11 := P20 + P4 + P8 + P1 + P6 + P10 + P2;
c12 := P1 + P2 + P3;
c13 := P21 + P5 + P9 + P2 + P7 + P11 + P1;
c21 := P1 + P4 + P8 + P12 + P16;
c22 := P22 + P4 + P12 + P1 + P5 + P13 + P2;
c23 := P2 + P5 + P9 + P13 + P17;
c31 := P2 + P6 + P10 + P14 + P18;
c32 := P23 + P6 + P14 + P2 + P7 + P15 + P1;
c33 := P1 + P7 + P11 + P15 + P19;

# Simplify(c11 - (a11*b11+a12*b21+a13*b31));
# Simplify(c12 - (a11*b12+a12*b22+a13*b32));
# Simplify(c13 - (a11*b13+a12*b23+a13*b33));
# Simplify(c21 - (a21*b11+a22*b21+a23*b31));
# Simplify(c22 - (a21*b12+a22*b22+a23*b32));
# Simplify(c23 - (a21*b13+a22*b23+a23*b33));
# Simplify(c31 - (a31*b11+a32*b21+a33*b31));
# Simplify(c32 - (a31*b12+a32*b22+a33*b32));
# Simplify(c33 - (a31*b13+a32*b23+a33*b33));

