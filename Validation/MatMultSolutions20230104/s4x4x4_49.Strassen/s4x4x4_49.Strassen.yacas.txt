#
# Yacas script 's4x4x4_49.Strassen.yacas.txt' created 04-Jan-2023 14:38:48
#
# Matrix multiplication method for 4x4x4_49
#
# Intermediate products: 49
#
P01 := (a11 + a22 + a33 + a44) * (b11 + b22 + b33 + b44);
P02 := (a21 + a22 + a43 + a44) * (b11 + b33);
P03 := (a11 + a33) * (b12 - b22 + b34 - b44);
P04 := (a22 + a44) * (b11 - b21 + b33 - b43);
P05 := (a11 + a12 + a33 + a34) * (b22 + b44);
P06 := (a11 - a21 + a33 - a43) * (b11 + b12 + b33 + b34);
P07 := (a12 - a22 + a34 - a44) * (b21 + b22 + b43 + b44);
P08 := (a31 + a33 + a42 + a44) * (b11 + b22);
P09 := (a41 + a42 + a43 + a44) * b11;
P10 := (a31 + a33) * (b12 - b22);
P11 := (a42 + a44) * (b11 - b21);
P12 := (a31 + a32 + a33 + a34) * b22;
P13 := (a31 + a33 - a41 - a43) * (b11 + b12);
P14 := (a32 + a34 - a42 - a44) * (b21 + b22);
P15 := (a11 + a22) * (b13 + b24 - b33 - b44);
P16 := (a21 + a22) * (b13 - b33);
P17 := a11 * (b14 - b24 - b34 + b44);
P18 := a22 * (b13 - b23 - b33 + b43);
P19 := (a11 + a12) * (b24 - b44);
P20 := (a11 - a21) * (b13 + b14 - b33 - b34);
P21 := (a12 - a22) * (b23 + b24 - b43 - b44);
P22 := (a33 + a44) * (b11 + b22 - b31 - b42);
P23 := (a43 + a44) * (b11 - b31);
P24 := a33 * (b12 - b22 - b32 + b42);
P25 := a44 * (b11 - b21 - b31 + b41);
P26 := (a33 + a34) * (b22 - b42);
P27 := (a33 - a43) * (b11 + b12 - b31 - b32);
P28 := (a34 - a44) * (b21 + b22 - b41 - b42);
P29 := (a11 + a13 + a22 + a24) * (b33 + b44);
P30 := (a21 + a22 + a23 + a24) * b33;
P31 := (a11 + a13) * (b34 - b44);
P32 := (a22 + a24) * (b33 - b43);
P33 := (a11 + a12 + a13 + a14) * b44;
P34 := (a11 + a13 - a21 - a23) * (b33 + b34);
P35 := (a12 + a14 - a22 - a24) * (b43 + b44);
P36 := (a11 + a22 - a31 - a42) * (b11 + b13 + b22 + b24);
P37 := (a21 + a22 - a41 - a42) * (b11 + b13);
P38 := (a11 - a31) * (b12 + b14 - b22 - b24);
P39 := (a22 - a42) * (b11 + b13 - b21 - b23);
P40 := (a11 + a12 - a31 - a32) * (b22 + b24);
P41 := (a11 - a21 - a31 + a41) * (b11 + b12 + b13 + b14);
P42 := (a12 - a22 - a32 + a42) * (b21 + b22 + b23 + b24);
P43 := (a13 + a24 - a33 - a44) * (b31 + b33 + b42 + b44);
P44 := (a23 + a24 - a43 - a44) * (b31 + b33);
P45 := (a13 - a33) * (b32 + b34 - b42 - b44);
P46 := (a24 - a44) * (b31 + b33 - b41 - b43);
P47 := (a13 + a14 - a33 - a34) * (b42 + b44);
P48 := (a13 - a23 - a33 + a43) * (b31 + b32 + b33 + b34);
P49 := (a14 - a24 - a34 + a44) * (b41 + b42 + b43 + b44);

c11 := P01             - P04 - P05       + P07                                                                                     - P22             + P25 + P26       - P28 - P29             + P32 + P33       - P35                                           + P43             - P46 - P47       + P49;
c12 := P03       + P05                                                                                                             - P24       - P26                         - P31       - P33                                                                   + P45       + P47;
c13 := P15             - P18 - P19       + P21                                           + P29             - P32 - P33       + P35;
c14 := P17       + P19                                                                   + P31       + P33;
c21 := P02       - P04                                                                                                             - P23       + P25                         - P30       + P32                                                                   + P44       - P46;
c22 := P01 - P02 + P03             - P06                                                                                           - P22 + P23 - P24             + P27       - P29 + P30 - P31             + P34                                                 + P43 - P44 + P45             - P48;
c23 := P16       - P18                                                                   + P30       - P32;
c24 := P15 - P16 + P17             - P20                                                 + P29 - P30 + P31             - P34;
c31 := P08             - P11 - P12       + P14                                           - P22             + P25 + P26       - P28;
c32 := P10       + P12                                                                   - P24       - P26;
c33 := P01             - P04 - P05       + P07 - P08             + P11 + P12       - P14 + P15             - P18 - P19       + P21                                                                                     - P36             + P39 + P40       - P42;
c34 := P03       + P05                         - P10       - P12                         + P17       + P19                                                                                                             - P38       - P40;
c41 := P09       - P11                                                                   - P23       + P25;
c42 := P08 - P09 + P10             - P13                                                 - P22 + P23 - P24             + P27;
c43 := P02       - P04                         - P09       + P11                         + P16       - P18                                                                                                             - P37       + P39;
c44 := P01 - P02 + P03             - P06       - P08 + P09 - P10             + P13       + P15 - P16 + P17             - P20                                                                                           - P36 + P37 - P38             + P41;

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31 + a14*b41));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32 + a14*b42));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33 + a14*b43));
Simplify(c14 - (a11*b14 + a12*b24 + a13*b34 + a14*b44));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31 + a24*b41));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32 + a24*b42));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33 + a24*b43));
Simplify(c24 - (a21*b14 + a22*b24 + a23*b34 + a24*b44));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31 + a34*b41));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32 + a34*b42));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33 + a34*b43));
Simplify(c34 - (a31*b14 + a32*b24 + a33*b34 + a34*b44));
Simplify(c41 - (a41*b11 + a42*b21 + a43*b31 + a44*b41));
Simplify(c42 - (a41*b12 + a42*b22 + a43*b32 + a44*b42));
Simplify(c43 - (a41*b13 + a42*b23 + a43*b33 + a44*b43));
Simplify(c44 - (a41*b14 + a42*b24 + a43*b34 + a44*b44));

# Brent equation statistics about non-zero triples:
# in odd equations  [1]
# in even equations [0, 2, 4]
# in kernel columns [1, 2, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 4x4x4_49 solution file 's4x4x4_49.Strassen.yacas.txt'
#
