
#
# Simplified Yacas script 's3x3x3_23.JohnsonMcLoughlin.simplified.txt' created 04-Jan-2023 14:38:31
#
# Matrix multiplication method for 3x3x3_23
#
# Operation count was reduced by 24 add/subtract operations:
#
#         original  now
# a terms:   28  =>  20
# b terms:   28  =>  20
# c terms:   42  =>  34
# ---------------------------
# total:     98  =>  74
#

#
# Intermediate products: 23
#

#
# Auxiliary variables:
#
F1 := a11 + a12 + a13 - a22 - a32;
F2 := a11 - a21;
F3 := a13 - a33;
F4 := a31 + a32;
F5 := a13 - a23;

G1 := - b11 + b21 - b22 - b23 - b31;
G2 := - b12 + b22;
G3 := - b23 + b33;
G4 := b11 - b13;
G5 := - b22 + b32;

#
# Product terms:
#
P01 := (- a21 - a33 + F1) * b22;
P02 := F2 * G2;
P03 := a22 * (b12 + b33 + G1);
P04 := (a22 - F2) * (b11 + G2);
P05 := (a21 + a22) * (- b11 + b12);
P06 := a11 * b11;
P07 := (- a11 + F4) * (b23 + G4);
P08 := (- a11 + a31) * (b13 - b23);
P09 := F4 * (- G4);
P10 := (- a23 - a31 + F1) * b23;
P11 := a32 * (b13 + b32 + G1);
P12 := (a32 - F3) * (b31 - G5);
P13 := F3 * (- G5);
P14 := a13 * b31;
P15 := (a32 + a33) * (- b31 + b32);
P16 := (a22 - F5) * (b31 - G3);
P17 := F5 * (- G3);
P18 := (a22 + a23) * (- b31 + b33);
P19 := a12 * b21;
P20 := a23 * b32;
P21 := a21 * b13;
P22 := a31 * b12;
P23 := a33 * b33;

#
# Auxiliary variables for sums of products:
#
T1 := P06 + P14;
T2 := P04 + P05;
T3 := P12 + P15;
T4 := P07 + P09;
T5 := P16 + P18;

#
# Target matrix sums of products:
#
c11 := P19 + T1;
c12 := P01 + T1 + T2 + T3;
c13 := P10 + T1 + T4 + T5;
c21 := P02 + P03 + P04 + P16 + P17 + T1;
c22 := P02 + P06 + P20 + T2;
c23 := P14 + P17 + P21 + T5;
c31 := P07 + P08 + P11 + P12 + P13 + T1;
c32 := P13 + P14 + P22 + T3;
c33 := P06 + P08 + P23 + T4;


#
# Algorithm validated via prime element calculation.
#

Simplify(c11 - (a11*b11 + a12*b21 + a13*b31));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33));
Simplify(c31 - (a31*b11 + a32*b21 + a33*b31));
Simplify(c32 - (a31*b12 + a32*b22 + a33*b32));
Simplify(c33 - (a31*b13 + a32*b23 + a33*b33));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2]
# in kernel columns [1, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 3x3x3_23 solution file 's3x3x3_23.JohnsonMcLoughlin.simplified.txt'
#
